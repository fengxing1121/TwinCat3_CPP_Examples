///////////////////////////////////////////////////////////////////////////////
// TcEthernetSampleServices.h

#pragma once

#include "TcServices.h"

const ULONG DrvID_TcEthernetSample = 0x3F000000;
#define SRVNAME_TCETHERNETSAMPLE "TcEthernetSample"

///<AutoGeneratedContent id="ClassIDs">
const CTCID CID_TcEthernetSampleCModuleARP = {0xd9a7518b,0x807c,0x4b10,{0xad,0xbf,0xb4,0x33,0xfe,0x2d,0x8c,0x2a}};
///</AutoGeneratedContent>

///<AutoGeneratedContent id="ParameterIDs">
const PTCID PID_ModuleARPSenderHardwareAddress = 0x00000005;
const PTCID PID_ModuleARPTargetHardwareAddress = 0x00000009;
const PTCID PID_ModuleARPSenderIpAddress = 0x00000006;
const PTCID PID_ModuleARPTargetIpAddress = 0x00000008;
const PTCID PID_ModuleARPArpRequestTimeoutMs = 0x0000000A;
const PTCID PID_ModuleARPMultiCastHardwareAddress = 0x0000000B;
const PTCID PID_ModuleARPEthernetAdapter = 0x00000003;
///</AutoGeneratedContent>

///<AutoGeneratedContent id="DataTypes">
#if !defined(_TC_TYPE_F45D8924_F151_4141_9296_7C8BB697BD07_INCLUDED_)
#define _TC_TYPE_F45D8924_F151_4141_9296_7C8BB697BD07_INCLUDED_
typedef struct _ETHERNET_ADDRESS
{
	BYTE b[6];
} ETHERNET_ADDRESS, *PETHERNET_ADDRESS;
#endif // !defined(_TC_TYPE_F45D8924_F151_4141_9296_7C8BB697BD07_INCLUDED_)

#if !defined(_TC_TYPE_18071995_0000_0000_0000_00000000003E_INCLUDED_)
#define _TC_TYPE_18071995_0000_0000_0000_00000000003E_INCLUDED_
typedef BYTE IPADDR[4];
#endif // !defined(_TC_TYPE_18071995_0000_0000_0000_00000000003E_INCLUDED_)

#if !defined(_TC_TYPE_266316A6_3822_47F0_912E_25CF0E8DBC2A_INCLUDED_)
#define _TC_TYPE_266316A6_3822_47F0_912E_25CF0E8DBC2A_INCLUDED_
enum EtherTypeCode : WORD {
	EtherTypeIP = 2048,
	EtherTypeARP1 = 2054
};
#endif // !defined(_TC_TYPE_266316A6_3822_47F0_912E_25CF0E8DBC2A_INCLUDED_)

#if !defined(_TC_TYPE_8CDA2136_D69C_41D7_8DE6_747FB72D6CE2_INCLUDED_)
#define _TC_TYPE_8CDA2136_D69C_41D7_8DE6_747FB72D6CE2_INCLUDED_
enum ArpHardwareTypeCode : WORD {
	ArpHardwareTypeEthernet = 1
};
#endif // !defined(_TC_TYPE_8CDA2136_D69C_41D7_8DE6_747FB72D6CE2_INCLUDED_)

#if !defined(_TC_TYPE_16D1057D_21AC_47D5_A9F5_97B5FB216256_INCLUDED_)
#define _TC_TYPE_16D1057D_21AC_47D5_A9F5_97B5FB216256_INCLUDED_
enum ArpOpCode : WORD {
	ArpOpRequest = 1,
	ArpOpReply = 2
};
#endif // !defined(_TC_TYPE_16D1057D_21AC_47D5_A9F5_97B5FB216256_INCLUDED_)

#if !defined(_TC_TYPE_FEA2A269_2A82_4A6E_8AA2_DFE33862316F_INCLUDED_)
#define _TC_TYPE_FEA2A269_2A82_4A6E_8AA2_DFE33862316F_INCLUDED_
#pragma pack(push,1)
typedef struct _ArpPacketType
{
	ArpHardwareTypeCode HardwareType;
	EtherTypeCode ProtocolType;
	BYTE HardwareAddressLength;
	BYTE ProtocolAddressLength;
	ArpOpCode Operation;
	ETHERNET_ADDRESS SenderHardwareAddress;
	DWORD SenderProtocolAddress;
	ETHERNET_ADDRESS TargetHardwareAddress;
	DWORD TargetProtocolAddress;
} ArpPacketType, *PArpPacketType;
#pragma pack(pop)
#endif // !defined(_TC_TYPE_FEA2A269_2A82_4A6E_8AA2_DFE33862316F_INCLUDED_)

#if !defined(_TC_TYPE_990ACFCA_ED53_4A57_931B_3A3202931F05_INCLUDED_)
#define _TC_TYPE_990ACFCA_ED53_4A57_931B_3A3202931F05_INCLUDED_
typedef struct _EthernetFrameType
{
	ETHERNET_ADDRESS Destination;
	ETHERNET_ADDRESS Source;
	EtherTypeCode EtherType;
} EthernetFrameType, *PEthernetFrameType;
#endif // !defined(_TC_TYPE_990ACFCA_ED53_4A57_931B_3A3202931F05_INCLUDED_)

#if !defined(_TC_TYPE_C244BD26_FAD0_4C0D_8414_0FB360FEF33C_INCLUDED_)
#define _TC_TYPE_C244BD26_FAD0_4C0D_8414_0FB360FEF33C_INCLUDED_
#pragma pack(push,1)
typedef struct _EthernetFrameArpType
{
	EthernetFrameType EthernetFrame;
	ArpPacketType ArpPacket;
} EthernetFrameArpType, *PEthernetFrameArpType;
#pragma pack(pop)
#endif // !defined(_TC_TYPE_C244BD26_FAD0_4C0D_8414_0FB360FEF33C_INCLUDED_)

#if !defined(_TC_TYPE_E7AEC79D_40C7_4EAA_9361_64D94BD628D4_INCLUDED_)
#define _TC_TYPE_E7AEC79D_40C7_4EAA_9361_64D94BD628D4_INCLUDED_
enum TcEthernetAdapterPriority : SHORT {
	TcEthernetAdapterPriorityLow = 1,
	TcEthernetAdapterPriorityHigh = 16
};
#endif // !defined(_TC_TYPE_E7AEC79D_40C7_4EAA_9361_64D94BD628D4_INCLUDED_)

#if !defined(_TC_TYPE_42AB5A84_DD76_4D3E_B836_9077FE05F816_INCLUDED_)
#define _TC_TYPE_42AB5A84_DD76_4D3E_B836_9077FE05F816_INCLUDED_
typedef struct _Data
{
	SHORT SubItem1;
	SHORT SubItem2;
	unsigned char reserved1[4];
	LONGLONG SubItem3;
} Data, *PData;
#endif // !defined(_TC_TYPE_42AB5A84_DD76_4D3E_B836_9077FE05F816_INCLUDED_)

typedef struct _ModuleARPInputs
{
	ULONG Value;
	ULONG Status;
	Data Data;
} ModuleARPInputs, *PModuleARPInputs;

typedef struct _ModuleARPOutputs
{
	BOOL LinkError;
	ULONG Speed;
} ModuleARPOutputs, *PModuleARPOutputs;

#pragma pack(push,1)
typedef struct _ModuleARPPackets
{
	EthernetFrameArpType ArpRequest;
} ModuleARPPackets, *PModuleARPPackets;
#pragma pack(pop)

///</AutoGeneratedContent>


///<AutoGeneratedContent id="InterfaceIDs">
TCOM_DECL_INTERFACE("03010060-0000-0000-e000-000000000064", ITcEthernetAdapter)
TCOM_DECL_INTERFACE("03010035-0000-0000-e000-000000000064", ITcIoEthProtocol)
///</AutoGeneratedContent>


#define ETHERNET_ADDRESS_TYPE_FMTSTRA "%02x:%02x:%02x:%02x:%02x:%02x"
#define ETHERNET_ADDRESS_TYPE_ARGS(a) a.b[0], a.b[1], a.b[2], a.b[3], a.b[4], a.b[5]

const	ETHERNET_ADDRESS	BroadcastEthernetAddress={0xff,0xff,0xff,0xff,0xff,0xff};
const	ETHERNET_ADDRESS	NullEthernetAddress={0,0,0,0,0,0};

static
bool IsEqual(const	ETHERNET_ADDRESS& addr1, const	ETHERNET_ADDRESS& addr2)
{
	return memcmp(&addr1, &addr2, sizeof(ETHERNET_ADDRESS)) == 0;
}


static 
BEGIN_VALUE_TO_STRINGA(GetEtherTypeString, EtherTypeCode)
ENTRY_VALUE_TO_STRINGA(EtherTypeIP)
ENTRY_VALUE_TO_STRINGA(EtherTypeARP1)
DEFAULT_VALUE_TO_STRINGA(EtherTypeCode)
END_VALUE_TO_STRINGA()

static 
BEGIN_VALUE_TO_STRINGA(GetArpOpCodeString, ArpOpCode)
ENTRY_VALUE_TO_STRINGA(ArpOpRequest)
ENTRY_VALUE_TO_STRINGA(ArpOpReply)
DEFAULT_VALUE_TO_STRINGA(ArpOpCode)
END_VALUE_TO_STRING()
