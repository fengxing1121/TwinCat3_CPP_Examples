///////////////////////////////////////////////////////////////////////////////
// ModuleDataProvider.cpp
#include "TcPch.h"
#pragma hdrstop

#include "ModuleDataProvider.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif
DEFINE_THIS_FILE()

///////////////////////////////////////////////////////////////////////////////
// Collection of interfaces implemented by module CModuleDataProvider
BEGIN_INTERFACE_MAP(CModuleDataProvider)
	INTERFACE_ENTRY_ITCOMOBJECT()
	INTERFACE_ENTRY(IID_ITcADI, ITcADI)
	INTERFACE_ENTRY(IID_ITcWatchSource, ITcWatchSource)
///<AutoGeneratedContent id="InterfaceMap">
	INTERFACE_ENTRY(IID_IDataRead, IDataRead)
	INTERFACE_ENTRY(IID_IDataWrite, IDataWrite)
///</AutoGeneratedContent>
END_INTERFACE_MAP()

IMPLEMENT_ITCOMOBJECT(CModuleDataProvider)
IMPLEMENT_ITCOMOBJECT_SETSTATE_LOCKOP2(CModuleDataProvider)
IMPLEMENT_ITCADI(CModuleDataProvider)
IMPLEMENT_ITCWATCHSOURCE(CModuleDataProvider)

///////////////////////////////////////////////////////////////////////////////
// Set parameters of CModuleDataProvider 
BEGIN_SETOBJPARA_MAP(CModuleDataProvider)
	SETOBJPARA_DATAAREA_MAP()
///<AutoGeneratedContent id="SetObjectParameterMap">
///</AutoGeneratedContent>
END_SETOBJPARA_MAP()

///////////////////////////////////////////////////////////////////////////////
// Get parameters of CModuleDataProvider 
BEGIN_GETOBJPARA_MAP(CModuleDataProvider)
	GETOBJPARA_DATAAREA_MAP()
///<AutoGeneratedContent id="GetObjectParameterMap">
///</AutoGeneratedContent>
END_GETOBJPARA_MAP()

///////////////////////////////////////////////////////////////////////////////
// Get watch entries of CModuleDataProvider
BEGIN_OBJPARAWATCH_MAP(CModuleDataProvider)
	OBJPARAWATCH_DATAAREA_MAP()
///<AutoGeneratedContent id="ObjectParameterWatchMap">
///</AutoGeneratedContent>
END_OBJPARAWATCH_MAP()

///////////////////////////////////////////////////////////////////////////////
// Get data area members of CModuleDataProvider
BEGIN_OBJDATAAREA_MAP(CModuleDataProvider)
///<AutoGeneratedContent id="ObjectDataAreaMap">
	OBJDATAAREA_VALUE(1, m_Provided)
///</AutoGeneratedContent>
END_OBJDATAAREA_MAP()


///////////////////////////////////////////////////////////////////////////////
// Constructor
CModuleDataProvider::CModuleDataProvider()
	: m_csInstance()
{
}

///////////////////////////////////////////////////////////////////////////////
// Destructor
CModuleDataProvider::~CModuleDataProvider() 
{
}

///////////////////////////////////////////////////////////////////////////////
// State Transitions 
///////////////////////////////////////////////////////////////////////////////
IMPLEMENT_ITCOMOBJECT_SETOBJSTATE_IP_PI(CModuleDataProvider)

///////////////////////////////////////////////////////////////////////////////
// State transition from PREOP to SAFEOP
//
// Initialize input parameters 
// Allocate memory
HRESULT CModuleDataProvider::SetObjStatePS(PTComInitDataHdr pInitData)
{
	HRESULT hr = S_OK;
	IMPLEMENT_ITCOMOBJECT_EVALUATE_INITDATA(pInitData);

	hr = FAILED(hr) ? hr : m_csInstance.CreateCriticalSection(OID_TCRTIME_CTRL, m_spSrv);

	return hr;
}

///////////////////////////////////////////////////////////////////////////////
// State transition from SAFEOP to OP
//
// Register with other TwinCAT objects
HRESULT CModuleDataProvider::SetObjStateSO()
{
	HRESULT hr = S_OK;
	return hr;
}

///////////////////////////////////////////////////////////////////////////////
// State transition from OP to SAFEOP
HRESULT CModuleDataProvider::SetObjStateOS()
{
	HRESULT hr = S_OK;
	return hr;
}

///////////////////////////////////////////////////////////////////////////////
// State transition from SAFEOP to PREOP
HRESULT CModuleDataProvider::SetObjStateSP()
{
	HRESULT hr = S_OK;

	m_csInstance.DeleteCriticalSection();

	return hr;
}

///<AutoGeneratedContent id="ImplementationOf_IDataRead">
HRESULT CModuleDataProvider::Retrieve(DataTypeCustom* pData)
{
	HRESULT hr = S_OK;
	m_csInstance.EnterCriticalSection();
	memcpy(pData, &m_Provided.Data, sizeof(m_Provided.Data));
	m_Provided.LastRead = m_Provided.Data.Id;
	m_csInstance.LeaveCriticalSection();
	return hr;
}
///</AutoGeneratedContent>

///<AutoGeneratedContent id="ImplementationOf_IDataWrite">
HRESULT CModuleDataProvider::Store(DataTypeCustom* pData)
{
	HRESULT hr = S_OK;
	m_csInstance.EnterCriticalSection();
	memcpy(&m_Provided.Data, pData, sizeof(m_Provided.Data));
	m_Provided.LastWrite = m_Provided.Data.Id;
	m_csInstance.LeaveCriticalSection();
	return hr;
}
///</AutoGeneratedContent>
