///////////////////////////////////////////////////////////////////////////////
// TcConcurrentDADrvClassFactory.cpp
#include "TcPch.h"
#pragma hdrstop

#include "TcConcurrentDADrvClassFactory.h"
#include "TcConcurrentDADrvServices.h"
#include "ModuleDataWrite.h"
#include "ModuleDataRead.h"
#include "ModuleDataProvider.h"

BEGIN_CLASS_MAP(CTcConcurrentDADrvClassFactory)
///<AutoGeneratedContent id="ClassMap">
	CLASS_ENTRY(CID_TcConcurrentDADrvCModuleDataWrite, SRVNAME_TCCONCURRENTDADRV "!CModuleDataWrite", CModuleDataWrite)
	CLASS_ENTRY(CID_TcConcurrentDADrvCModuleDataRead, SRVNAME_TCCONCURRENTDADRV "!CModuleDataRead", CModuleDataRead)
	CLASS_ENTRY(CID_TcConcurrentDADrvCModuleDataProvider, SRVNAME_TCCONCURRENTDADRV "!CModuleDataProvider", CModuleDataProvider)
///</AutoGeneratedContent>
END_CLASS_MAP()

CTcConcurrentDADrvClassFactory::CTcConcurrentDADrvClassFactory() : CObjClassFactory()
{
	TcDbgUnitSetImageName(TCDBG_UNIT_IMAGE_NAME(SRVNAME_TCCONCURRENTDADRV)); 
}

