///////////////////////////////////////////////////////////////////////////////
// TcFileTestDrv.h
#pragma once

#include "TcFileTestDrvInterfaces.h"
#include "TcFileAccessInterfaces.h"

class CTcFileTestDrv 
	: public ITComObject
	, public ITcADI
	, public ITcWatchSource
///<AutoGeneratedContent id="InheritanceList">
	, public ITcCyclic
///</AutoGeneratedContent>
{
public:
	DECLARE_IUNKNOWN()
	DECLARE_IPERSIST(CID_TcFileTestDrvCTcFileTestDrv)
	DECLARE_ITCOMOBJECT_LOCKOP()
	DECLARE_ITCADI()
	DECLARE_ITCWATCHSOURCE()
	DECLARE_OBJPARAWATCH_MAP()
	DECLARE_OBJDATAAREA_MAP()

	CTcFileTestDrv();
	virtual	~CTcFileTestDrv();


///<AutoGeneratedContent id="InterfaceMembers">
	// ITcCyclic
	virtual HRESULT TCOMAPI CycleUpdate(ITcTask* ipTask, ITcUnknown* ipCaller, ULONG_PTR context);

///</AutoGeneratedContent>

protected:
	DECLARE_ITCOMOBJECT_SETSTATE();

	HRESULT AddModuleToCaller();
	VOID RemoveModuleFromCaller();

///<AutoGeneratedContent id="Members">
	TcTraceLevel m_TraceLevelMax;
	TcFileTestDrvParameter m_Parameter;
	TcFileTestDrvInputs m_Inputs;
	TcFileTestDrvOutputs m_Outputs;
	ITcCyclicCallerInfoPtr m_spCyclicCaller;
///</AutoGeneratedContent>

	
	//sample code 
	ITcFileAccessPtr m_spFileAccess;
	PCHAR            m_pBuffer;
	UINT             m_nBuffer;

	VOID FileCopy(PCCH szFileNameRead, PCCH szFileNameWrite);
	VOID PrintFilesOfDir(PCCH szDir);
	VOID PrintFileInfoToLog(PCCH szFileName);
	//sample code end
	
	// Tracing
	CTcTrace m_Trace;

	// TODO: Custom variable
	UINT m_counter;
};
