///////////////////////////////////////////////////////////////////////////////
// TcSdoAccessModul.h
#pragma once

#include "TcAccessCoESdoViaAdsDrvInterfaces.h"
#include "AdsR0.h"

// parameter ids for TwinCAT module TcSdoAccessModul with disabled code generation
// could be moved to TcAccessCoESdoViaAdsDrvServices.h
const PTCID PID_TcSdoAccessModulAdsPort        = 0x00000002;

class CTcSdoAccessModul 
	: public ITComObject
	, public ITcADI
	, public ITcWatchSource
///<AutoGeneratedContent id="InheritanceList">
	, public ITcCyclic
///</AutoGeneratedContent>
	, public CAdsR0FifoPort
{
public:
	DECLARE_IUNKNOWN()
	DECLARE_IPERSIST(CID_TcAccessCoESdoViaAdsDrvCTcSdoAccessModul)
	DECLARE_ITCOMOBJECT_LOCKOP()
	DECLARE_ITCADI()
	DECLARE_ITCWATCHSOURCE()
	DECLARE_OBJPARAWATCH_MAP()
	DECLARE_OBJDATAAREA_MAP()

	CTcSdoAccessModul();
	virtual	~CTcSdoAccessModul();


///<AutoGeneratedContent id="InterfaceMembers">
	// ITcCyclic
	virtual HRESULT TCOMAPI CycleUpdate(ITcTask* ipTask, ITcUnknown* ipCaller, ULONG_PTR context);

///</AutoGeneratedContent>

	// CAds
	virtual void AdsWriteCon
	(
		AmsAddr& rAddr, 
		ULONG invokeId, 
		ULONG result
	);


	virtual void AdsReadCon
	(
		AmsAddr& rAddr, 
		ULONG invokeId, 
		ULONG result, 
		ULONG cbLength, 
		PVOID pData
	);

protected:
	DECLARE_ITCOMOBJECT_SETSTATE();

///<AutoGeneratedContent id="Members">
	TcTraceLevel m_TraceLevelMax;
	WORD m_DefaultAdsPort;
	WORD m_ContextAdsPort;
	ULONG m_Counter;
	DWORD m_VendorId;
	USHORT m_BaudRate;
	WORD m_CoEVendorIdIndex;
	WORD m_CoEVendorIdSubIndex;
	WORD m_CoEBaudRateIndex;
	WORD m_CoEBaudRateSubIndex;
	TcSdoAccessModulInputs m_Inputs;
	TcSdoAccessModulOutputs m_Outputs;
	ITcCyclicCallerInfoPtr m_spCyclicCaller;
///</AutoGeneratedContent>

	HRESULT AddModuleToCaller();
	VOID RemoveModuleFromCaller();

	// Tracing
	CTcTrace m_Trace;

	void SubmitAdsCoEReadReq();
	void SubmitAdsCoEWriteReq();

	enum 
	{
		invokeIdReadVendorIdByCoE = 1,
		invokeIdWriteBaudRateByCoE = 2
	};
};
